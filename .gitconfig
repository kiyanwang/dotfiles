[user]
    name = <NAME>
    email = <EMAIL>

[color]
    ui = true
    branch = auto
    status = auto

[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[gc]
    auto = 1

[merge]
    summary = true

[alias]
    # log
    l = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
    ll = log --graph --date=short
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lstat = log --stat --abbrev-commit
    lc = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat  

    # how many unpushed commits do i have
    ahead = log --stat @{u}..HEAD

    # commit
    ci = commit -m                    # commit with message
    ca = commit -am                   # commit all with message
    c = commit                        # commit
    amend = commit --amend            # ammend your last commit
    ammend = commit --amend           # ammend your last commit

    # checkout and branching
    co = checkout
    newbranch = checkout -b
    branches  = branch -v
    delbranch = branch -d

    # get upstream changes
    up = "!git fetch origin && git rebase origin/master"
    ir = "!git rebase -i origin/master"

    #status
    st = status
    stc = status -sb

    # stash
    sl = stash list
    sa = stash apply
    ss = stash save

    #remote
    remotes = remote -v
    prune-stale-dryrun = remote prune origin --dry-run
    prune-stale = remote prune origin
    prune-local = "!git branch --merged master | grep -v '\\* master' | xargs -n 1 git branch -d"

    # search repo, with ack style output
    g = grep --break --heading --line-number

    # diff
    dl = "!git lc -1"                # last commit 
    dlc = diff --cached HEAD^        # diff last commit

    # who has worked on this repo
    who = shortlog -n -s --no-merges

    # standup i.e. what did i do yesterday 
    standup = "!git log --since yesterday --author `git config user.email` --pretty=short" 

    # what files are being ignored
    ignored = ls-files --others --ignored --exclude-standard

    # remove a branch both locally and remotely when it is no longer needed
    rmb = "!f() { git branch -D $1 && git push origin :$1; }; f"
    
    # undo all changes on this branch ,hard reset
    undo = reset --hard
    
    # show all aliases
    aliases = "!git config -l | grep alias | cut -c 7-"
	
[diff]
    external = git-meld
